

imp:
  imp_key: ${IMP_KEY}
  imp_secret: ${IMP_SECRET}


jwt:
  secret-key: ${JWT}
  token:
    expired-time-ms: 1800000

spring:
  sql:
    init:
      mode: always
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  mail:
    host: ${EMAIL_HOST}
    port: ${EMAIL_PORT}
    username: ${EMAIL_ID}
    password: ${EMAIL_PW}
    properties:
      mail:
        smtp:
          starttls:
            enable: true
            required: true
          auth: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
  datasource:
    url: jdbc:${DB_TYPE}://${DB_ADDR}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PW}
    driver-class-name: ${DB_DRIVER}
  server:
    port: 8080

  jpa:
    database: ${DB_TYPE}
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        format_sql: true
    show-sql: true

logging:
  level:
    org.springframework.security: DEBUG

cloud:
  aws:
    s3:
      bucket: ${BUCKET}
    credentials:
      access-key: ${ACCESS_KEY}
      secret-key: ${SECRET_KEY}
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false
